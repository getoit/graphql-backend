// Code generated by ent, DO NOT EDIT.

package ent

import (
	"time"
)

// CreateProfileInput represents a mutation input for creating profiles.
type CreateProfileInput struct {
	CreateTime *time.Time
	UpdateTime *time.Time
	Sub        string
	Name       string
	Gender     string
}

// Mutate applies the CreateProfileInput on the ProfileMutation builder.
func (i *CreateProfileInput) Mutate(m *ProfileMutation) {
	if v := i.CreateTime; v != nil {
		m.SetCreateTime(*v)
	}
	if v := i.UpdateTime; v != nil {
		m.SetUpdateTime(*v)
	}
	m.SetSub(i.Sub)
	m.SetName(i.Name)
	m.SetGender(i.Gender)
}

// SetInput applies the change-set in the CreateProfileInput on the ProfileCreate builder.
func (c *ProfileCreate) SetInput(i CreateProfileInput) *ProfileCreate {
	i.Mutate(c.Mutation())
	return c
}

// UpdateProfileInput represents a mutation input for updating profiles.
type UpdateProfileInput struct {
	ClearUpdateTime bool
	UpdateTime      *time.Time
	Sub             *string
	Name            *string
	Gender          *string
}

// Mutate applies the UpdateProfileInput on the ProfileMutation builder.
func (i *UpdateProfileInput) Mutate(m *ProfileMutation) {
	if i.ClearUpdateTime {
		m.ClearUpdateTime()
	}
	if v := i.UpdateTime; v != nil {
		m.SetUpdateTime(*v)
	}
	if v := i.Sub; v != nil {
		m.SetSub(*v)
	}
	if v := i.Name; v != nil {
		m.SetName(*v)
	}
	if v := i.Gender; v != nil {
		m.SetGender(*v)
	}
}

// SetInput applies the change-set in the UpdateProfileInput on the ProfileUpdate builder.
func (c *ProfileUpdate) SetInput(i UpdateProfileInput) *ProfileUpdate {
	i.Mutate(c.Mutation())
	return c
}

// SetInput applies the change-set in the UpdateProfileInput on the ProfileUpdateOne builder.
func (c *ProfileUpdateOne) SetInput(i UpdateProfileInput) *ProfileUpdateOne {
	i.Mutate(c.Mutation())
	return c
}
